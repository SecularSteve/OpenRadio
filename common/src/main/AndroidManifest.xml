<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright 2021 The "Open Radio" Project. Author: Chernyshov Yuriy

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.yuriy.openradio">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />

    <queries>
        <intent>
            <action android:name="android.intent.action.VIEW" />
            <data android:scheme="https" />
        </intent>
    </queries>

    <application
        android:name=".shared.MainAppCommon"
        android:requestLegacyExternalStorage="true"
        android:usesCleartextTraffic="true">

        <!--
             MediaSession, prior to API 21, uses a broadcast receiver to communicate with a
             media session. It does not have to be this broadcast receiver, but it must
             handle the action "android.intent.action.MEDIA_BUTTON".

             Additionally, this is used to resume the service from an inactive state upon
             receiving a media button event (such as "play").
        -->
        <receiver android:name="androidx.media.session.MediaButtonReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <provider
            android:name=".shared.model.storage.images.ImagesProvider"
            android:authorities="openradio.images"
            android:enabled="true"
            android:exported="true" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <meta-data
            android:name="firebase_crashlytics_collection_enabled"
            android:value="${firebaseCrashlyticsCollectionEnabled}" />

        <!-- Declare that Open Radio supports Cast. -->
        <meta-data android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
            android:value="com.yuriy.openradio.shared.cast.OpenRadioCastOptionsProvider"/>

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>

        <service
            android:name=".shared.service.location.LocationService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:stopWithTask="true" />

        <service
            android:name=".shared.service.OpenRadioService"
            android:exported="true"
            android:enabled="true"
            android:foregroundServiceType="mediaPlayback"
            tools:ignore="ExportedService">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
                <action android:name="androidx.media3.session.MediaLibraryService"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.media.action.MEDIA_PLAY_FROM_SEARCH" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>

    </application>

</manifest>
